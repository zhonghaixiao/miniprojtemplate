{"version":3,"sources":["weRequest.js"],"names":[],"mappingsfile":"index.js","sourcesContent":["/*!\n * weRequest 1.0.9\n * https://github.com/IvinWu/weRequest\n */\nmodule.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = \"./src/index.ts\");\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ \"./src/api/getConfig.ts\":\n/*!******************************!*\\\n  !*** ./src/api/getConfig.ts ***!\n  \\******************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar config_1 = __webpack_require__(/*! ../store/config */ \"./src/store/config.ts\");\r\nvar status_1 = __webpack_require__(/*! ../store/status */ \"./src/store/status.ts\");\r\nexports.default = (function () {\r\n    var configResult = {\r\n        urlPerfix: config_1.default.urlPerfix,\r\n        sessionExpireTime: status_1.default.sessionExpireTime,\r\n        sessionExpireKey: config_1.default.sessionExpireKey,\r\n        sessionExpire: status_1.default.sessionExpire\r\n    };\r\n    return configResult;\r\n});\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0Q29uZmlnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2FwaS9nZXRDb25maWcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwwQ0FBb0M7QUFDcEMsMENBQW9DO0FBYXBDLG1CQUFlO0lBQ1gsSUFBTSxZQUFZLEdBQXFCO1FBQ25DLFNBQVMsRUFBRSxnQkFBTSxDQUFDLFNBQVM7UUFDM0IsaUJBQWlCLEVBQUUsZ0JBQU0sQ0FBQyxpQkFBaUI7UUFDM0MsZ0JBQWdCLEVBQUUsZ0JBQU0sQ0FBQyxnQkFBZ0I7UUFDekMsYUFBYSxFQUFFLGdCQUFNLENBQUMsYUFBYTtLQUN0QyxDQUFBO0lBQ0QsT0FBTyxZQUFZLENBQUM7QUFDeEIsQ0FBQyxFQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNvbmZpZyBmcm9tICcuLi9zdG9yZS9jb25maWcnXHJcbmltcG9ydCBzdGF0dXMgZnJvbSAnLi4vc3RvcmUvc3RhdHVzJ1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBJR2V0Q29uZmlnUmVzdWx0e1xyXG4gICAgLyog5Zyo57uE5Lu25Yid5aeL5YyW5pe25Lyg5YWl55qE6K+35rGCVVJM55qE5Zu65a6a5YmN57yAICovXHJcbiAgICB1cmxQZXJmaXg/OiBzdHJpbmcgfCAoKCkgPT4gc3RyaW5nKTtcclxuICAgIC8qIOWcqOe7hOS7tuWIneWni+WMluaXtuS8oOWFpeeahOeUqOaIt+eZu+mZhuaAgeiuvue9ruacrOWcsOe8k+WtmOaXtumXtCAqL1xyXG4gICAgc2Vzc2lvbkV4cGlyZVRpbWU/OiBudW1iZXI7XHJcbiAgICAvKiDlnKjnu4Tku7bliJ3lp4vljJbml7bkvKDlhaXnmoTnlKjmiLfnmbvpmYbmgIHmnKzlnLDnvJPlrZjml7bpl7RTdG9yYWdl55qEa2V5ICovXHJcbiAgICBzZXNzaW9uRXhwaXJlS2V5Pzogc3RyaW5nO1xyXG4gICAgLyog55So5oi355m76ZmG5oCB5pys5Zyw57yT5a2Y6L+H5pyf55qE5pe26Ze05oizICovXHJcbiAgICBzZXNzaW9uRXhwaXJlPzogbnVtYmVyO1xyXG4gIH1cclxuXHJcbmV4cG9ydCBkZWZhdWx0ICgpID0+IHtcclxuICAgIGNvbnN0IGNvbmZpZ1Jlc3VsdCA6SUdldENvbmZpZ1Jlc3VsdCA9IHtcclxuICAgICAgICB1cmxQZXJmaXg6IGNvbmZpZy51cmxQZXJmaXgsXHJcbiAgICAgICAgc2Vzc2lvbkV4cGlyZVRpbWU6IHN0YXR1cy5zZXNzaW9uRXhwaXJlVGltZSxcclxuICAgICAgICBzZXNzaW9uRXhwaXJlS2V5OiBjb25maWcuc2Vzc2lvbkV4cGlyZUtleSxcclxuICAgICAgICBzZXNzaW9uRXhwaXJlOiBzdGF0dXMuc2Vzc2lvbkV4cGlyZVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIGNvbmZpZ1Jlc3VsdDtcclxufTtcclxuIl19\n\n/***/ }),\n\n/***/ \"./src/api/getSession.ts\":\n/*!*******************************!*\\\n  !*** ./src/api/getSession.ts ***!\n  \\*******************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar status_1 = __webpack_require__(/*! ../store/status */ \"./src/store/status.ts\");\r\nexports.default = (function () {\r\n    return status_1.default.session;\r\n});\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0U2Vzc2lvbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9hcGkvZ2V0U2Vzc2lvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLDBDQUFvQztBQUVwQyxtQkFBZTtJQUNYLE9BQU8sZ0JBQU0sQ0FBQyxPQUFPLENBQUE7QUFDekIsQ0FBQyxFQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHN0YXR1cyBmcm9tICcuLi9zdG9yZS9zdGF0dXMnXHJcblxyXG5leHBvcnQgZGVmYXVsdCAoKSA9PiB7XHJcbiAgICByZXR1cm4gc3RhdHVzLnNlc3Npb25cclxufVxyXG4iXX0=\n\n/***/ }),\n\n/***/ \"./src/api/init.ts\":\n/*!*************************!*\\\n  !*** ./src/api/init.ts ***!\n  \\*************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar config_1 = __webpack_require__(/*! ../store/config */ \"./src/store/config.ts\");\r\nvar status_1 = __webpack_require__(/*! ../store/status */ \"./src/store/status.ts\");\r\nexports.default = (function (params) {\r\n    var config = __assign({}, params, config_1.default);\r\n    if (params.sessionName) {\r\n        try {\r\n            status_1.default.session = wx.getStorageSync(config.sessionName) || '';\r\n        }\r\n        catch (e) {\r\n            console.error('wx.getStorageSync:fail, can not get session.');\r\n        }\r\n    }\r\n    if (params.sessionExpireKey) {\r\n        try {\r\n            status_1.default.sessionExpire = wx.getStorageSync(config.sessionExpireKey) || Infinity;\r\n        }\r\n        catch (e) {\r\n            console.error('wx.getStorageSync:fail, can not get sessionExpire.');\r\n        }\r\n    }\r\n});\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5pdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9hcGkvaW5pdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUEsMENBQTJDO0FBQzNDLDBDQUFvQztBQXFFcEMsbUJBQWUsVUFBQyxNQUFtQjtJQUMvQixJQUFNLE1BQU0sZ0JBQW9CLE1BQU0sRUFBSyxnQkFBYSxDQUFDLENBQUE7SUFFekQsSUFBSSxNQUFNLENBQUMsV0FBVyxFQUFFO1FBQ3BCLElBQUk7WUFDQSxnQkFBTSxDQUFDLE9BQU8sR0FBRyxFQUFFLENBQUMsY0FBYyxDQUFDLE1BQU0sQ0FBQyxXQUFZLENBQUMsSUFBSSxFQUFFLENBQUM7U0FDakU7UUFBQyxPQUFPLENBQUMsRUFBRTtZQUNSLE9BQU8sQ0FBQyxLQUFLLENBQUMsOENBQThDLENBQUMsQ0FBQTtTQUNoRTtLQUNKO0lBRUQsSUFBSSxNQUFNLENBQUMsZ0JBQWdCLEVBQUU7UUFDekIsSUFBSTtZQUNBLGdCQUFNLENBQUMsYUFBYSxHQUFHLEVBQUUsQ0FBQyxjQUFjLENBQUMsTUFBTSxDQUFDLGdCQUFnQixDQUFDLElBQUksUUFBUSxDQUFDO1NBQ2pGO1FBQUMsT0FBTyxDQUFDLEVBQUU7WUFDUixPQUFPLENBQUMsS0FBSyxDQUFDLG9EQUFvRCxDQUFDLENBQUE7U0FDdEU7S0FDSjtBQUNMLENBQUMsRUFBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBkZWZhdWx0Q29uZmlnIGZyb20gJy4uL3N0b3JlL2NvbmZpZydcclxuaW1wb3J0IHN0YXR1cyBmcm9tICcuLi9zdG9yZS9zdGF0dXMnXHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIElJbml0T3B0aW9uIHtcclxuICAgIC8qIOeUqGNvZGXmjaLlj5ZzZXNzaW9u55qEQ0dJ6YWN572uICovXHJcbiAgICBjb2RlVG9TZXNzaW9uOiBJQ29kZVRvU2Vzc2lvbk9wdGlvbnM7XHJcbiAgICAvKiDlgqjlrZjlnKhsb2NhbFN0b3JhZ2XnmoRzZXNzaW9u5ZCN56ew77yM5LiUQ0dJ6K+35rGC55qEZGF0YeS4reS8muiHquWKqOW4puS4iuS7peatpOS4uuWQjeensOeahHNlc3Npb27lgLzvvJvlj6/kuI3phY3nva7vvIzpu5jorqTkuLpzZXNzaW9uICovXHJcbiAgICBzZXNzaW9uTmFtZT86IHN0cmluZztcclxuICAgIC8qIOivt+axglVSTOeahOWbuuWumuWJjee8gO+8jOWmguaenOmFjee9ruS6hu+8jOWQjue7reivt+axgueahFVSTOmDveS8muiHquWKqOWKoOS4iui/meS4quWJjee8gO+8jOWmguaenOaYr+WHveaVsO+8jOWImeS4uuWHveaVsOeahOi/lOWbnuWAvCAqL1xyXG4gICAgdXJsUGVyZml4Pzogc3RyaW5nIHwgKCgpID0+IHN0cmluZyk7XHJcbiAgICAvKiDmmK/lkKbpnIDopoHosIPnlKhjaGVja1Nlc3Npb27vvIzpqozor4HlsI/nqIvluo/nmoTnmbvlvZXmgIHov4fmnJ/vvJvoi6XkuJrliqHkuI3pnIDopoHkvb/nlKjliLBzZXNzaW9uX2tlee+8jOWImeWPr+mFjee9ruS4unRydWUgKi9cclxuICAgIGRvTm90Q2hlY2tTZXNzaW9uPzogYm9vbGVhbjtcclxuICAgIC8qIOeZu+W9lemHjeivleasoeaVsO+8jOW9k+i/nue7reivt+axgueZu+W9leaOpeWPo+i/lOWbnuWksei0peasoeaVsOi2hei/h+i/meS4quasoeaVsO+8jOWwhuS4jeWGjemHjeivleeZu+W9lSAqL1xyXG4gICAgcmVMb2dpbkxpbWl0PzogbnVtYmVyO1xyXG4gICAgLyog5b2T5Ye6546w5o6l5Y+j6YC76L6R6ZSZ6K+v5pe277yM5Lya5omn6KGM57uf5LiA55qE5Zue6LCD5Ye95pWw77yM6L+Z6YeM5Y+v5Lul5YGa57uf5LiA55qE6ZSZ6K+v5LiK5oql562J5aSE55CGICovXHJcbiAgICBlcnJvckNhbGxiYWNrPzogbnVsbCB8IEZ1bmN0aW9uO1xyXG4gICAgLyog5o6l5Y+j6L+U5Zue5oiQ5Yqf5LmL5ZCO77yM5Lya5omn6KGM57uf5LiA55qE5Zue6LCD5Ye95pWw77yM6L+Z6YeM5Y+v5Lul5YGa57uf5LiA55qE6ICX5pe25LiK5oql562J5aSE55CGICovXHJcbiAgICByZXBvcnRDR0k/OiBib29sZWFuIHwgKChcclxuICAgICAgLyog6LCD55So55qE5o6l5Y+j5ZCN5a2X77yM5Y+v5ZyocmVxdWVzdOaOpeWPo+eahHJlcG9ydOWtl+autemFjee9riAqL1xyXG4gICAgICBuYW1lOiBzdHJpbmcsXHJcbiAgICAgIC8qIOWPkei1t+ivt+axguaXtueahOaXtumXtOaIsyAqL1xyXG4gICAgICBzdGFydFRpbWU6IG51bWJlcixcclxuICAgICAgLyog6K+35rGC6L+U5Zue5pe255qE5pe26Ze05oizICovXHJcbiAgICAgIGVuZFRpbWU6IG51bWJlcixcclxuICAgICAgLyog6K+35rGC5pa55rOV77yM5Y+v55So5LqO5LiK5oqlICovXHJcbiAgICAgIHJlcXVlc3Q/OiAoKSA9PiB2b2lkXHJcbiAgICApID0+IHZvaWQpO1xyXG4gICAgLyogXHTlj6/kuLrmjqXlj6Pmj5Dkvpttb2Nr5pWw5o2uICovXHJcbiAgICBtb2NrSnNvbj86IFRPRE87XHJcbiAgICAvKiog5omA5pyJ6K+35rGC6YO95Lya6Ieq5Yqo5bim5LiK6L+Z6YeM55qE5Y+C5pWwICovXHJcbiAgICBnbG9iYWxEYXRhPzogYm9vbGVhbiB8IG9iamVjdCB8IEZ1bmN0aW9uO1xyXG4gICAgLyoqIHNlc3Npb27lnKjmnKzlnLDnvJPlrZjnmoRrZXkgKi9cclxuICAgIHNlc3Npb25FeHBpcmVLZXk6IHN0cmluZztcclxuICAgIC8qIOinpuWPkemHjeaWsOeZu+W9leeahOadoeS7tu+8m+WPguaVsOS4ukNHSei/lOWbnueahOaVsOaNru+8jOi/lOWbnumcgOimgemHjeaWsOeZu+W9leeahOadoeS7tiAqL1xyXG4gICAgbG9naW5UcmlnZ2VyPzogKHJlczogc3RyaW5nIHwgSUFueU9iamVjdCB8IEFycmF5QnVmZmVyKSA9PiBib29sZWFuO1xyXG4gICAgLyog6Kem5Y+R6K+35rGC5oiQ5Yqf55qE5p2h5Lu277yb5Y+C5pWw5Li6Q0dJ6L+U5Zue55qE5pWw5o2u77yM6L+U5Zue5o6l5Y+j6YC76L6R5oiQ5Yqf55qE5p2h5Lu2ICovXHJcbiAgICBzdWNjZXNzVHJpZ2dlcj86IChyZXM6IHN0cmluZyB8IElBbnlPYmplY3QgfCBBcnJheUJ1ZmZlcikgPT4gYm9vbGVhbjtcclxuICAgIC8qIOaIkOWKn+S5i+WQjui/lOWbnuaVsOaNru+8m+WPguaVsOS4ukNHSei/lOWbnueahOaVsOaNru+8jOi/lOWbnumAu+i+kemcgOimgeS9v+eUqOeahOaVsOaNriAqL1xyXG4gICAgc3VjY2Vzc0RhdGE/OiAocmVzOiBzdHJpbmcgfCBJQW55T2JqZWN0IHwgQXJyYXlCdWZmZXIpID0+IGJvb2xlYW47XHJcbiAgICAvKiBcdOaOpeWPo+mAu+i+keWksei0peaXtu+8jOmUmeivr+W8ueeql+eahOagh+mimCAqL1xyXG4gICAgZXJyb3JUaXRsZT86IHN0cmluZyB8ICgocmVzOiBzdHJpbmcgfCBJQW55T2JqZWN0IHwgQXJyYXlCdWZmZXIpID0+IHN0cmluZyk7XHJcbiAgICAvKiDmjqXlj6PpgLvovpHlpLHotKXml7bvvIzplJnor6/lvLnnqpfnmoTlhoXlrrkgKi9cclxuICAgIGVycm9yQ29udGVudD86IHN0cmluZyB8ICgocmVzOiBzdHJpbmcgfCBJQW55T2JqZWN0IHwgQXJyYXlCdWZmZXIpID0+IHN0cmluZyk7XHJcbiAgfVxyXG5cclxuICBleHBvcnQgaW50ZXJmYWNlIElDb2RlVG9TZXNzaW9uT3B0aW9uc3tcclxuICAgIC8qIENHSeeahHVybCAqL1xyXG4gICAgdXJsPzogc3RyaW5nO1xyXG4gICAgLyog6LCD55So6K+lQ0dJ55qE5pa55rOVICovXHJcbiAgICBtZXRob2Q/OiAnT1BUSU9OUydcclxuICAgIHwgJ0dFVCdcclxuICAgIHwgJ0hFQUQnXHJcbiAgICB8ICdQT1NUJ1xyXG4gICAgfCAnUFVUJ1xyXG4gICAgfCAnREVMRVRFJ1xyXG4gICAgfCAnVFJBQ0UnXHJcbiAgICB8ICdDT05ORUNUJyB8ICdzdHJpbmcnLFxyXG4gICAgLyogQ0dJ5Lit5Lyg5Y+C5pe277yM5a2Y5pS+Y29kZeeahOWQjeensCAqL1xyXG4gICAgY29kZU5hbWU/OiBzdHJpbmc7XHJcbiAgICAvKiDnmbvlvZXmjqXlj6PpnIDopoHnmoTlhbbku5blj4LmlbAgKi9cclxuICAgIGRhdGE/OiBzdHJpbmcgfCBJQW55T2JqZWN0IHwgQXJyYXlCdWZmZXI7XHJcbiAgICAvKiDmjqXlj6Pov5Tlm57miJDlip/nmoTlh73mlbDvvJvpnIDopoHov5Tlm55zZXNzaW9u55qE5YC8ICovXHJcbiAgICBzdWNjZXNzPzogRnVuY3Rpb247XHJcbiAgICAvKiBjb2Rl5o2i5Y+Wc2Vzc2lvbueahOaOpeWPo+mAu+i+keWHuumUmeaXtu+8jOaJp+ihjOeahOWHveaVsO+8jOiLpemFjee9ruS6huatpOWHveaVsO+8jOWImeS4jeWGjem7mOiupOW8ueeql+aKpemUmSAqL1xyXG4gICAgZmFpbD86IEZ1bmN0aW9uO1xyXG4gICAgLyogY29kZVRvU2Vzc2lvbueahOS4iuaKpeWtl+auteWQjSAqL1xyXG4gICAgcmVwb3J0Pzogc3RyaW5nO1xyXG4gIH1cclxuICBcclxuXHJcbmV4cG9ydCBkZWZhdWx0IChwYXJhbXM6IElJbml0T3B0aW9uKSA9PiB7XHJcbiAgICBjb25zdCBjb25maWc6IElJbml0T3B0aW9uID0gey4uLnBhcmFtcywgLi4uZGVmYXVsdENvbmZpZ31cclxuICAgIC8vIOWmguaenOmFjee9ruabtOaUueS6hnNlc3Npb27nmoTlrZjlgqjlkI3lrZfvvIzliJnph43mlrDojrflj5bkuIDmrKFzZXNzaW9uXHJcbiAgICBpZiAocGFyYW1zLnNlc3Npb25OYW1lKSB7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgc3RhdHVzLnNlc3Npb24gPSB3eC5nZXRTdG9yYWdlU3luYyhjb25maWcuc2Vzc2lvbk5hbWUhKSB8fCAnJztcclxuICAgICAgICB9IGNhdGNoIChlKSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ3d4LmdldFN0b3JhZ2VTeW5jOmZhaWwsIGNhbiBub3QgZ2V0IHNlc3Npb24uJylcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAvLyDlpoLmnpzphY3nva7mm7TmlLnkuoZzZXNzaW9u6L+H5pyf5pe26Ze055qE5a2Y5YKo5ZCN5a2X77yM5YiZ6YeN5paw6I635Y+W5LiA5qyhc2Vzc2lvbueahOi/h+acn+aXtumXtFxyXG4gICAgaWYgKHBhcmFtcy5zZXNzaW9uRXhwaXJlS2V5KSB7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgc3RhdHVzLnNlc3Npb25FeHBpcmUgPSB3eC5nZXRTdG9yYWdlU3luYyhjb25maWcuc2Vzc2lvbkV4cGlyZUtleSkgfHwgSW5maW5pdHk7XHJcbiAgICAgICAgfSBjYXRjaCAoZSkge1xyXG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKCd3eC5nZXRTdG9yYWdlU3luYzpmYWlsLCBjYW4gbm90IGdldCBzZXNzaW9uRXhwaXJlLicpXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbiJdfQ==\n\n/***/ }),\n\n/***/ \"./src/api/login.ts\":\n/*!**************************!*\\\n  !*** ./src/api/login.ts ***!\n  \\**************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar sessionManager_1 = __webpack_require__(/*! ../module/sessionManager */ \"./src/module/sessionManager.ts\");\r\nexports.default = (function (callback) {\r\n    return sessionManager_1.default(callback, {});\r\n});\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9naW4uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvYXBpL2xvZ2luLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsMkRBQW1EO0FBRW5ELG1CQUFlLFVBQUMsUUFBa0I7SUFDOUIsT0FBTyx3QkFBWSxDQUFDLFFBQVEsRUFBRSxFQUFFLENBQUMsQ0FBQTtBQUNyQyxDQUFDLEVBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY2hlY2tTZXNzaW9uIGZyb20gJy4uL21vZHVsZS9zZXNzaW9uTWFuYWdlcidcclxuXHJcbmV4cG9ydCBkZWZhdWx0IChjYWxsYmFjazogRnVuY3Rpb24pID0+IHtcclxuICAgIHJldHVybiBjaGVja1Nlc3Npb24oY2FsbGJhY2ssIHt9KVxyXG59XHJcbiJdfQ==\n\n/***/ }),\n\n/***/ \"./src/api/request.ts\":\n/*!****************************!*\\\n  !*** ./src/api/request.ts ***!\n  \\****************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar requestHandler_1 = __webpack_require__(/*! ../module/requestHandler */ \"./src/module/requestHandler.ts\");\r\nexports.default = (function (obj) {\r\n    requestHandler_1.default.request(obj);\r\n});\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVxdWVzdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9hcGkvcmVxdWVzdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLDJEQUFxRDtBQVdyRCxtQkFBZSxVQUFDLEdBQW1CO0lBQy9CLHdCQUFjLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFBO0FBQy9CLENBQUMsRUFBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCByZXF1ZXN0SGFuZGxlciBmcm9tICcuLi9tb2R1bGUvcmVxdWVzdEhhbmRsZXInXHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIElSZXF1ZXN0T3B0aW9uIGV4dGVuZHMgd3guUmVxdWVzdE9wdGlvbiB7XHJcbiAgICAvKiDlj5Hotbfor7fmsYLliY3miafooYznmoTlh73mlbAgKi9cclxuICAgIGJlZm9yZVNlbmQ/OiBGdW5jdGlvbjtcclxuICAgIC8qIOivt+axgui/h+eoi+mhtemdouaYr+WQpuWxleekuuWFqOWxj+eahGxvYWRpbmcgKi9cclxuICAgIHNob3dMb2FkaW5nPzogYm9vbGVhbiB8IHN0cmluZztcclxuICAgIC8qIOaOpeWPo+ivt+axguaIkOWKn+WQjuWwhuiHquWKqOaJp+ihjGluaXQoKeS4remFjee9rueahHJlcG9ydENHSeWHveaVsO+8jOWFtuS4reeahG5hbWXlrZfmrrXlgLzkuLrov5nph4zphY3nva7nmoTlgLwgKi9cclxuICAgIHJlcG9ydD86IHN0cmluZztcclxuICB9XHJcblxyXG5leHBvcnQgZGVmYXVsdCAob2JqOiBJUmVxdWVzdE9wdGlvbikgPT4ge1xyXG4gICAgcmVxdWVzdEhhbmRsZXIucmVxdWVzdChvYmopXHJcbn1cclxuIl19\n\n/***/ }),\n\n/***/ \"./src/api/setSession.ts\":\n/*!*******************************!*\\\n  !*** ./src/api/setSession.ts ***!\n  \\*******************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar status_1 = __webpack_require__(/*! ../store/status */ \"./src/store/status.ts\");\r\nexports.default = (function (session) {\r\n    status_1.default.session = session;\r\n    status_1.default.sessionIsFresh = true;\r\n});\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2V0U2Vzc2lvbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9hcGkvc2V0U2Vzc2lvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLDBDQUFvQztBQUVwQyxtQkFBZSxVQUFDLE9BQWE7SUFDekIsZ0JBQU0sQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDO0lBQ3pCLGdCQUFNLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQztBQUNqQyxDQUFDLEVBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgc3RhdHVzIGZyb20gJy4uL3N0b3JlL3N0YXR1cydcclxuXHJcbmV4cG9ydCBkZWZhdWx0IChzZXNzaW9uOiBUT0RPKSA9PiB7XHJcbiAgICBzdGF0dXMuc2Vzc2lvbiA9IHNlc3Npb247XHJcbiAgICBzdGF0dXMuc2Vzc2lvbklzRnJlc2ggPSB0cnVlO1xyXG59XHJcbiJdfQ==\n\n/***/ }),\n\n/***/ \"./src/api/uploadFile.ts\":\n/*!*******************************!*\\\n  !*** ./src/api/uploadFile.ts ***!\n  \\*******************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar requestHandler_1 = __webpack_require__(/*! ../module/requestHandler */ \"./src/module/requestHandler.ts\");\r\nexports.default = (function (obj) {\r\n    requestHandler_1.default.uploadFile(obj);\r\n});\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXBsb2FkRmlsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9hcGkvdXBsb2FkRmlsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLDJEQUFxRDtBQUVyRCxtQkFBZSxVQUFDLEdBQVM7SUFDckIsd0JBQWMsQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLENBQUE7QUFDbEMsQ0FBQyxFQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHJlcXVlc3RIYW5kbGVyIGZyb20gJy4uL21vZHVsZS9yZXF1ZXN0SGFuZGxlcidcclxuXHJcbmV4cG9ydCBkZWZhdWx0IChvYmo6IFRPRE8pID0+IHtcclxuICAgIHJlcXVlc3RIYW5kbGVyLnVwbG9hZEZpbGUob2JqKVxyXG59XHJcbiJdfQ==\n\n/***/ }),\n\n/***/ \"./src/index.ts\":\n/*!**********************!*\\\n  !*** ./src/index.ts ***!\n  \\**********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar init_1 = __webpack_require__(/*! ./api/init */ \"./src/api/init.ts\");\r\nvar request_1 = __webpack_require__(/*! ./api/request */ \"./src/api/request.ts\");\r\nvar uploadFile_1 = __webpack_require__(/*! ./api/uploadFile */ \"./src/api/uploadFile.ts\");\r\nvar setSession_1 = __webpack_require__(/*! ./api/setSession */ \"./src/api/setSession.ts\");\r\nvar login_1 = __webpack_require__(/*! ./api/login */ \"./src/api/login.ts\");\r\nvar getSession_1 = __webpack_require__(/*! ./api/getSession */ \"./src/api/getSession.ts\");\r\nvar getConfig_1 = __webpack_require__(/*! ./api/getConfig */ \"./src/api/getConfig.ts\");\r\nvar weRequestObject = {\r\n    init: init_1.default,\r\n    request: request_1.default,\r\n    uploadFile: uploadFile_1.default,\r\n    setSession: setSession_1.default,\r\n    login: login_1.default,\r\n    getSession: getSession_1.default,\r\n    getConfig: getConfig_1.default\r\n};\r\nexports.default = weRequestObject;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxtQ0FBOEI7QUFDOUIseUNBQW9DO0FBQ3BDLCtDQUEwQztBQUMxQywrQ0FBMEM7QUFDMUMscUNBQWdDO0FBQ2hDLCtDQUEwQztBQUMxQyw2Q0FBd0M7QUF5Q3hDLElBQU0sZUFBZSxHQUFjO0lBQ2pDLElBQUksZ0JBQUE7SUFDSixPQUFPLG1CQUFBO0lBQ1AsVUFBVSxzQkFBQTtJQUNWLFVBQVUsc0JBQUE7SUFDVixLQUFLLGlCQUFBO0lBQ0wsVUFBVSxzQkFBQTtJQUNWLFNBQVMscUJBQUE7Q0FDVixDQUFDO0FBRUYsa0JBQWUsZUFBZSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGluaXQgZnJvbSBcIi4vYXBpL2luaXRcIjtcclxuaW1wb3J0IHJlcXVlc3QgZnJvbSBcIi4vYXBpL3JlcXVlc3RcIjtcclxuaW1wb3J0IHVwbG9hZEZpbGUgZnJvbSBcIi4vYXBpL3VwbG9hZEZpbGVcIjtcclxuaW1wb3J0IHNldFNlc3Npb24gZnJvbSBcIi4vYXBpL3NldFNlc3Npb25cIjtcclxuaW1wb3J0IGxvZ2luIGZyb20gXCIuL2FwaS9sb2dpblwiO1xyXG5pbXBvcnQgZ2V0U2Vzc2lvbiBmcm9tIFwiLi9hcGkvZ2V0U2Vzc2lvblwiO1xyXG5pbXBvcnQgZ2V0Q29uZmlnIGZyb20gXCIuL2FwaS9nZXRDb25maWdcIjtcclxuaW1wb3J0IHsgSUluaXRPcHRpb24gfSBmcm9tIFwiLi9hcGkvaW5pdFwiO1xyXG5pbXBvcnQgeyBJUmVxdWVzdE9wdGlvbiB9IGZyb20gXCIuL2FwaS9yZXF1ZXN0XCI7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIElVcGxvYWRGaWxlT3B0aW9uIGV4dGVuZHMgd3guVXBsb2FkRmlsZU9wdGlvbiB7XHJcbiAgLyog5Y+R6LW36K+35rGC5YmN5omn6KGM55qE5Ye95pWwICovXHJcbiAgYmVmb3JlU2VuZD86IEZ1bmN0aW9uO1xyXG4gIC8qIOivt+axgui/h+eoi+mhtemdouaYr+WQpuWxleekuuWFqOWxj+eahGxvYWRpbmcgKi9cclxuICBzaG93TG9hZGluZz86IGJvb2xlYW4gfCBzdHJpbmc7XHJcbiAgLyog5o6l5Y+j6K+35rGC5oiQ5Yqf5ZCO5bCG6Ieq5Yqo5omn6KGMaW5pdCgp5Lit6YWN572u55qEcmVwb3J0Q0dJ5Ye95pWw77yM5YW25Lit55qEbmFtZeWtl+auteWAvOS4uui/memHjOmFjee9rueahOWAvCAqL1xyXG4gIHJlcG9ydD86IHN0cmluZztcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBJR2V0Q29uZmlnUmVzdWx0IHtcclxuICAvKiDlnKjnu4Tku7bliJ3lp4vljJbml7bkvKDlhaXnmoTor7fmsYJVUkznmoTlm7rlrprliY3nvIAgKi9cclxuICB1cmxQZXJmaXg/OiBzdHJpbmcgfCAoKCkgPT4gc3RyaW5nKTtcclxuICAvKiDlnKjnu4Tku7bliJ3lp4vljJbml7bkvKDlhaXnmoTnlKjmiLfnmbvpmYbmgIHorr7nva7mnKzlnLDnvJPlrZjml7bpl7QgKi9cclxuICBzZXNzaW9uRXhwaXJlVGltZT86IG51bWJlcjtcclxuICAvKiDlnKjnu4Tku7bliJ3lp4vljJbml7bkvKDlhaXnmoTnlKjmiLfnmbvpmYbmgIHmnKzlnLDnvJPlrZjml7bpl7RTdG9yYWdl55qEa2V5ICovXHJcbiAgc2Vzc2lvbkV4cGlyZUtleT86IHN0cmluZztcclxuICAvKiDnlKjmiLfnmbvpmYbmgIHmnKzlnLDnvJPlrZjov4fmnJ/nmoTml7bpl7TmiLMgKi9cclxuICBzZXNzaW9uRXhwaXJlPzogbnVtYmVyO1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIHdlUmVxdWVzdCB7XHJcbiAgLyoqIOWwj+eoi+W6j+i0puWPt+S/oeaBryAqL1xyXG4gIGluaXQ/OiAob2JqOiBJSW5pdE9wdGlvbikgPT4gdm9pZDtcclxuICAvKiog5o+S5Lu26LSm5Y+35L+h5oGv77yI5LuF5Zyo5o+S5Lu25Lit6LCD55So5pe25YyF5ZCr6L+Z5LiA6aG577yJICovXHJcbiAgcmVxdWVzdD86IChvcHRpb246IElSZXF1ZXN0T3B0aW9uKSA9PiB2b2lkO1xyXG4gIC8qKiDmj5Lku7botKblj7fkv6Hmga/vvIjku4XlnKjmj5Lku7bkuK3osIPnlKjml7bljIXlkKvov5nkuIDpobnvvIkgKi9cclxuICB1cGxvYWRGaWxlPzogKG9wdGlvbjogSVVwbG9hZEZpbGVPcHRpb24pID0+IHZvaWQ7XHJcbiAgLyog6I635Y+W5pys5Zyw57yT5a2Y5Lit55So5oi356Wo5o2u55qE5YC8ICovXHJcbiAgZ2V0U2Vzc2lvbj86ICgpID0+IHN0cmluZztcclxuICAvKiDojrflj5Z3ZVJlcXVlc3TnmoTphY3nva4gKi9cclxuICBnZXRDb25maWc/OiAoKSA9PiBJR2V0Q29uZmlnUmVzdWx0O1xyXG4gIC8qIFvkuI3lu7rorq7kvb/nlKhdIOWcqOS4jeWPkei1t+S4muWKoeivt+axgueahOaDheWGteS4i++8jOWNleeLrOaJp+ihjOeZu+W9lemAu+i+kSAqL1xyXG4gIGxvZ2luPzogKGNhbGxiYWNrOiBGdW5jdGlvbikgPT4gdm9pZDtcclxuICAvKiBb5LiN5bu66K6u5L2/55SoXSDorr7nva7nlKjmiLfnpajmja7nmoTlgLwgKi9cclxuICBzZXRTZXNzaW9uPzogKHg6IHN0cmluZykgPT4gdm9pZDtcclxufVxyXG5cclxuY29uc3Qgd2VSZXF1ZXN0T2JqZWN0OiB3ZVJlcXVlc3QgPSB7XHJcbiAgaW5pdCxcclxuICByZXF1ZXN0LFxyXG4gIHVwbG9hZEZpbGUsXHJcbiAgc2V0U2Vzc2lvbixcclxuICBsb2dpbixcclxuICBnZXRTZXNzaW9uLFxyXG4gIGdldENvbmZpZ1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgd2VSZXF1ZXN0T2JqZWN0O1xyXG4iXX0=\n\n/***/ }),\n\n/***/ \"./src/module/cacheManager.ts\":\n/*!************************************!*\\\n  !*** ./src/module/cacheManager.ts ***!\n  \\************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction get(obj) {\r\n    wx.getStorage({\r\n        key: obj.originUrl,\r\n        success: function (res) {\r\n            if (typeof obj.cache === \"function\" && obj.cache(res.data)) {\r\n                if (typeof obj.success === \"function\") {\r\n                    obj.success(res.data, { isCache: true });\r\n                }\r\n            }\r\n            else if (obj.cache == true) {\r\n                if (typeof obj.success === \"function\") {\r\n                    obj.success(res.data, { isCache: true });\r\n                }\r\n            }\r\n            typeof obj.complete === \"function\" && obj.complete();\r\n        }\r\n    });\r\n}\r\nfunction set(obj, realData) {\r\n    if (obj.cache === true || (typeof obj.cache === \"function\" && obj.cache(realData))) {\r\n        wx.setStorage({\r\n            key: obj.originUrl,\r\n            data: realData\r\n        });\r\n    }\r\n}\r\nexports.default = {\r\n    get: get,\r\n    set: set\r\n};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGVNYW5hZ2VyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL21vZHVsZS9jYWNoZU1hbmFnZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxTQUFTLEdBQUcsQ0FBQyxHQUFTO0lBQ2xCLEVBQUUsQ0FBQyxVQUFVLENBQUM7UUFDVixHQUFHLEVBQUUsR0FBRyxDQUFDLFNBQVM7UUFDbEIsT0FBTyxFQUFFLFVBQVUsR0FBRztZQUNsQixJQUFJLE9BQU8sR0FBRyxDQUFDLEtBQUssS0FBSyxVQUFVLElBQUksR0FBRyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEVBQUU7Z0JBQ3hELElBQUksT0FBTyxHQUFHLENBQUMsT0FBTyxLQUFLLFVBQVUsRUFBRTtvQkFDbkMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxFQUFFLEVBQUMsT0FBTyxFQUFFLElBQUksRUFBQyxDQUFDLENBQUE7aUJBQ3pDO2FBQ0o7aUJBQU0sSUFBSSxHQUFHLENBQUMsS0FBSyxJQUFJLElBQUksRUFBRTtnQkFDMUIsSUFBSSxPQUFPLEdBQUcsQ0FBQyxPQUFPLEtBQUssVUFBVSxFQUFFO29CQUNuQyxHQUFHLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLEVBQUUsRUFBQyxPQUFPLEVBQUUsSUFBSSxFQUFDLENBQUMsQ0FBQTtpQkFDekM7YUFDSjtZQUNELE9BQU8sR0FBRyxDQUFDLFFBQVEsS0FBSyxVQUFVLElBQUksR0FBRyxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQ3pELENBQUM7S0FDSixDQUFDLENBQUE7QUFDTixDQUFDO0FBRUQsU0FBUyxHQUFHLENBQUMsR0FBUyxFQUFHLFFBQWM7SUFDbkMsSUFBSSxHQUFHLENBQUMsS0FBSyxLQUFLLElBQUksSUFBSSxDQUFDLE9BQU8sR0FBRyxDQUFDLEtBQUssS0FBSyxVQUFVLElBQUksR0FBRyxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQyxFQUFFO1FBQ2hGLEVBQUUsQ0FBQyxVQUFVLENBQUM7WUFDVixHQUFHLEVBQUUsR0FBRyxDQUFDLFNBQVM7WUFDbEIsSUFBSSxFQUFFLFFBQVE7U0FDakIsQ0FBQyxDQUFBO0tBQ0w7QUFDTCxDQUFDO0FBRUQsa0JBQWU7SUFDWCxHQUFHLEtBQUE7SUFDSCxHQUFHLEtBQUE7Q0FDTixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gZ2V0KG9iajogVE9ETykge1xyXG4gICAgd3guZ2V0U3RvcmFnZSh7XHJcbiAgICAgICAga2V5OiBvYmoub3JpZ2luVXJsLFxyXG4gICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChyZXMpIHtcclxuICAgICAgICAgICAgaWYgKHR5cGVvZiBvYmouY2FjaGUgPT09IFwiZnVuY3Rpb25cIiAmJiBvYmouY2FjaGUocmVzLmRhdGEpKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIG9iai5zdWNjZXNzID09PSBcImZ1bmN0aW9uXCIpIHtcclxuICAgICAgICAgICAgICAgICAgICBvYmouc3VjY2VzcyhyZXMuZGF0YSwge2lzQ2FjaGU6IHRydWV9KVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9IGVsc2UgaWYgKG9iai5jYWNoZSA9PSB0cnVlKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIG9iai5zdWNjZXNzID09PSBcImZ1bmN0aW9uXCIpIHtcclxuICAgICAgICAgICAgICAgICAgICBvYmouc3VjY2VzcyhyZXMuZGF0YSwge2lzQ2FjaGU6IHRydWV9KVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHR5cGVvZiBvYmouY29tcGxldGUgPT09IFwiZnVuY3Rpb25cIiAmJiBvYmouY29tcGxldGUoKTtcclxuICAgICAgICB9XHJcbiAgICB9KVxyXG59XHJcblxyXG5mdW5jdGlvbiBzZXQob2JqOiBUT0RPICwgcmVhbERhdGE6IFRPRE8pIHtcclxuICAgIGlmIChvYmouY2FjaGUgPT09IHRydWUgfHwgKHR5cGVvZiBvYmouY2FjaGUgPT09IFwiZnVuY3Rpb25cIiAmJiBvYmouY2FjaGUocmVhbERhdGEpKSkge1xyXG4gICAgICAgIHd4LnNldFN0b3JhZ2Uoe1xyXG4gICAgICAgICAgICBrZXk6IG9iai5vcmlnaW5VcmwsXHJcbiAgICAgICAgICAgIGRhdGE6IHJlYWxEYXRhXHJcbiAgICAgICAgfSlcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG4gICAgZ2V0LFxyXG4gICAgc2V0XHJcbn07XHJcbiJdfQ==\n\n/***/ }),\n\n/***/ \"./src/module/durationReporter.ts\":\n/*!****************************************!*\\\n  !*** ./src/module/durationReporter.ts ***!\n  \\****************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar config_1 = __webpack_require__(/*! ../store/config */ \"./src/store/config.ts\");\r\nfunction start(obj, name) {\r\n    switch (name) {\r\n        case 'checkSession':\r\n            obj._checkSessionStartTime = new Date().getTime();\r\n            break;\r\n        case 'login':\r\n            obj._loginStartTime = new Date().getTime();\r\n            break;\r\n        default:\r\n            if (obj.report) {\r\n                obj._reportStartTime = new Date().getTime();\r\n            }\r\n    }\r\n}\r\nfunction end(obj, name) {\r\n    switch (name) {\r\n        case 'checkSession':\r\n            obj._checkSessionEndTime = new Date().getTime();\r\n            if (typeof config_1.default.reportCGI === \"function\") {\r\n                config_1.default.reportCGI('wx_checkSession', obj._checkSessionStartTime, obj._checkSessionEndTime);\r\n            }\r\n            break;\r\n        case 'login':\r\n            obj._loginEndTime = new Date().getTime();\r\n            if (typeof config_1.default.reportCGI === \"function\") {\r\n                config_1.default.reportCGI('wx_login', obj._loginStartTime, obj._loginEndTime);\r\n            }\r\n            break;\r\n        default:\r\n            if (obj.report && typeof config_1.default.reportCGI === \"function\") {\r\n                obj._reportEndTime = new Date().getTime();\r\n                config_1.default.reportCGI(obj.report, obj._reportStartTime, obj._reportEndTime);\r\n            }\r\n            break;\r\n    }\r\n}\r\nexports.default = {\r\n    start: start,\r\n    end: end\r\n};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHVyYXRpb25SZXBvcnRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9tb2R1bGUvZHVyYXRpb25SZXBvcnRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLDBDQUFvQztBQUVwQyxTQUFTLEtBQUssQ0FBQyxHQUFTLEVBQUUsSUFBYTtJQUNuQyxRQUFRLElBQUksRUFBRTtRQUNWLEtBQUssY0FBYztZQUNmLEdBQUcsQ0FBQyxzQkFBc0IsR0FBRyxJQUFJLElBQUksRUFBRSxDQUFDLE9BQU8sRUFBRSxDQUFDO1lBQ2xELE1BQU07UUFDVixLQUFLLE9BQU87WUFDUixHQUFHLENBQUMsZUFBZSxHQUFHLElBQUksSUFBSSxFQUFFLENBQUMsT0FBTyxFQUFFLENBQUM7WUFDM0MsTUFBTTtRQUNWO1lBQ0ksSUFBSSxHQUFHLENBQUMsTUFBTSxFQUFFO2dCQUNaLEdBQUcsQ0FBQyxnQkFBZ0IsR0FBRyxJQUFJLElBQUksRUFBRSxDQUFDLE9BQU8sRUFBRSxDQUFDO2FBQy9DO0tBQ1I7QUFDTCxDQUFDO0FBRUQsU0FBUyxHQUFHLENBQUMsR0FBUyxFQUFFLElBQWE7SUFDakMsUUFBUSxJQUFJLEVBQUU7UUFDVixLQUFLLGNBQWM7WUFFZixHQUFHLENBQUMsb0JBQW9CLEdBQUcsSUFBSSxJQUFJLEVBQUUsQ0FBQyxPQUFPLEVBQUUsQ0FBQztZQUNoRCxJQUFJLE9BQU8sZ0JBQU0sQ0FBQyxTQUFTLEtBQUssVUFBVSxFQUFFO2dCQUN4QyxnQkFBTSxDQUFDLFNBQVMsQ0FBQyxpQkFBaUIsRUFBRSxHQUFHLENBQUMsc0JBQXNCLEVBQUUsR0FBRyxDQUFDLG9CQUFvQixDQUFDLENBQUM7YUFDN0Y7WUFDRCxNQUFNO1FBQ1YsS0FBSyxPQUFPO1lBRVIsR0FBRyxDQUFDLGFBQWEsR0FBRyxJQUFJLElBQUksRUFBRSxDQUFDLE9BQU8sRUFBRSxDQUFDO1lBQ3pDLElBQUksT0FBTyxnQkFBTSxDQUFDLFNBQVMsS0FBSyxVQUFVLEVBQUU7Z0JBQ3hDLGdCQUFNLENBQUMsU0FBUyxDQUFDLFVBQVUsRUFBRSxHQUFHLENBQUMsZUFBZSxFQUFFLEdBQUcsQ0FBQyxhQUFhLENBQUMsQ0FBQzthQUN4RTtZQUNELE1BQU07UUFDVjtZQUVJLElBQUksR0FBRyxDQUFDLE1BQU0sSUFBSSxPQUFPLGdCQUFNLENBQUMsU0FBUyxLQUFLLFVBQVUsRUFBRTtnQkFDdEQsR0FBRyxDQUFDLGNBQWMsR0FBRyxJQUFJLElBQUksRUFBRSxDQUFDLE9BQU8sRUFBRSxDQUFDO2dCQUMxQyxnQkFBTSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsTUFBTSxFQUFFLEdBQUcsQ0FBQyxnQkFBZ0IsRUFBRSxHQUFHLENBQUMsY0FBYyxDQUFDLENBQUM7YUFDMUU7WUFDRCxNQUFNO0tBQ2I7QUFDTCxDQUFDO0FBRUQsa0JBQWU7SUFDWCxLQUFLLE9BQUE7SUFDTCxHQUFHLEtBQUE7Q0FDTixDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNvbmZpZyBmcm9tICcuLi9zdG9yZS9jb25maWcnXHJcblxyXG5mdW5jdGlvbiBzdGFydChvYmo6IFRPRE8sIG5hbWU/OiBzdHJpbmcpIHtcclxuICAgIHN3aXRjaCAobmFtZSkge1xyXG4gICAgICAgIGNhc2UgJ2NoZWNrU2Vzc2lvbic6XHJcbiAgICAgICAgICAgIG9iai5fY2hlY2tTZXNzaW9uU3RhcnRUaW1lID0gbmV3IERhdGUoKS5nZXRUaW1lKCk7XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIGNhc2UgJ2xvZ2luJzpcclxuICAgICAgICAgICAgb2JqLl9sb2dpblN0YXJ0VGltZSA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpO1xyXG4gICAgICAgICAgICBicmVhaztcclxuICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgICBpZiAob2JqLnJlcG9ydCkge1xyXG4gICAgICAgICAgICAgICAgb2JqLl9yZXBvcnRTdGFydFRpbWUgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG5mdW5jdGlvbiBlbmQob2JqOiBUT0RPLCBuYW1lPzogc3RyaW5nKSB7XHJcbiAgICBzd2l0Y2ggKG5hbWUpIHtcclxuICAgICAgICBjYXNlICdjaGVja1Nlc3Npb24nOlxyXG4gICAgICAgICAgICAvLyB3eC5jaGVja1Nlc3Npb24g6ICX5pe25LiK5oqlXHJcbiAgICAgICAgICAgIG9iai5fY2hlY2tTZXNzaW9uRW5kVGltZSA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpO1xyXG4gICAgICAgICAgICBpZiAodHlwZW9mIGNvbmZpZy5yZXBvcnRDR0kgPT09IFwiZnVuY3Rpb25cIikge1xyXG4gICAgICAgICAgICAgICAgY29uZmlnLnJlcG9ydENHSSgnd3hfY2hlY2tTZXNzaW9uJywgb2JqLl9jaGVja1Nlc3Npb25TdGFydFRpbWUsIG9iai5fY2hlY2tTZXNzaW9uRW5kVGltZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgY2FzZSAnbG9naW4nOlxyXG4gICAgICAgICAgICAvLyB3eC5sb2dpbiDogJfml7bkuIrmiqVcclxuICAgICAgICAgICAgb2JqLl9sb2dpbkVuZFRpbWUgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKTtcclxuICAgICAgICAgICAgaWYgKHR5cGVvZiBjb25maWcucmVwb3J0Q0dJID09PSBcImZ1bmN0aW9uXCIpIHtcclxuICAgICAgICAgICAgICAgIGNvbmZpZy5yZXBvcnRDR0koJ3d4X2xvZ2luJywgb2JqLl9sb2dpblN0YXJ0VGltZSwgb2JqLl9sb2dpbkVuZFRpbWUpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgIC8vIOWFtuS7lkNHSeaOpeWPo1xyXG4gICAgICAgICAgICBpZiAob2JqLnJlcG9ydCAmJiB0eXBlb2YgY29uZmlnLnJlcG9ydENHSSA9PT0gXCJmdW5jdGlvblwiKSB7XHJcbiAgICAgICAgICAgICAgICBvYmouX3JlcG9ydEVuZFRpbWUgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKTtcclxuICAgICAgICAgICAgICAgIGNvbmZpZy5yZXBvcnRDR0kob2JqLnJlcG9ydCwgb2JqLl9yZXBvcnRTdGFydFRpbWUsIG9iai5fcmVwb3J0RW5kVGltZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYnJlYWs7XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuICAgIHN0YXJ0LFxyXG4gICAgZW5kXHJcbn1cclxuIl19\n\n/***/ }),\n\n/***/ \"./src/module/errorHandler.ts\":\n/*!************************************!*\\\n  !*** ./src/module/errorHandler.ts ***!\n  \\************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar config_1 = __webpack_require__(/*! ../store/config */ \"./src/store/config.ts\");\r\nexports.default = (function (obj, res) {\r\n    if (typeof obj.fail === \"function\") {\r\n        obj.fail(res);\r\n    }\r\n    else {\r\n        var title = \"\";\r\n        if (typeof config_1.default.errorTitle === \"function\") {\r\n            try {\r\n                title = config_1.default.errorTitle(res.data || res.errMsg);\r\n            }\r\n            catch (e) {\r\n            }\r\n        }\r\n        else if (typeof config_1.default.errorTitle === \"string\") {\r\n            title = config_1.default.errorTitle;\r\n        }\r\n        var content = \"\";\r\n        if (typeof config_1.default.errorContent === \"function\") {\r\n            try {\r\n                content = config_1.default.errorContent(res.data || res.errMsg);\r\n            }\r\n            catch (e) {\r\n            }\r\n        }\r\n        else if (typeof config_1.default.errorContent === \"string\") {\r\n            content = config_1.default.errorContent;\r\n        }\r\n        wx.showModal({\r\n            title: title,\r\n            content: content || \"网络或服务异常，请稍后重试\",\r\n            showCancel: false\r\n        });\r\n    }\r\n    if (typeof config_1.default.errorCallback === \"function\") {\r\n        config_1.default.errorCallback(obj, res);\r\n    }\r\n    console.error(res);\r\n});\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXJyb3JIYW5kbGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL21vZHVsZS9lcnJvckhhbmRsZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwwQ0FBb0M7QUFFcEMsbUJBQWUsVUFBQyxHQUFTLEVBQUUsR0FBUztJQUNoQyxJQUFJLE9BQU8sR0FBRyxDQUFDLElBQUksS0FBSyxVQUFVLEVBQUU7UUFDaEMsR0FBRyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztLQUNqQjtTQUFNO1FBQ0gsSUFBSSxLQUFLLEdBQUcsRUFBRSxDQUFDO1FBQ2YsSUFBSSxPQUFPLGdCQUFNLENBQUMsVUFBVSxLQUFLLFVBQVUsRUFBRTtZQUN6QyxJQUFJO2dCQUNBLEtBQUssR0FBRyxnQkFBTSxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsSUFBSSxJQUFJLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQTthQUNwRDtZQUFDLE9BQU8sQ0FBQyxFQUFFO2FBQ1g7U0FDSjthQUFNLElBQUksT0FBTyxnQkFBTSxDQUFDLFVBQVUsS0FBSyxRQUFRLEVBQUU7WUFDOUMsS0FBSyxHQUFHLGdCQUFNLENBQUMsVUFBVSxDQUFDO1NBQzdCO1FBRUQsSUFBSSxPQUFPLEdBQUcsRUFBRSxDQUFDO1FBQ2pCLElBQUksT0FBTyxnQkFBTSxDQUFDLFlBQVksS0FBSyxVQUFVLEVBQUU7WUFDM0MsSUFBSTtnQkFDQSxPQUFPLEdBQUcsZ0JBQU0sQ0FBQyxZQUFZLENBQUMsR0FBRyxDQUFDLElBQUksSUFBSSxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUE7YUFDeEQ7WUFBQyxPQUFPLENBQUMsRUFBRTthQUNYO1NBQ0o7YUFBTSxJQUFJLE9BQU8sZ0JBQU0sQ0FBQyxZQUFZLEtBQUssUUFBUSxFQUFFO1lBQ2hELE9BQU8sR0FBRyxnQkFBTSxDQUFDLFlBQVksQ0FBQztTQUNqQztRQUVELEVBQUUsQ0FBQyxTQUFTLENBQUM7WUFDVCxLQUFLLEVBQUUsS0FBSztZQUNaLE9BQU8sRUFBRSxPQUFPLElBQUksZUFBZTtZQUNuQyxVQUFVLEVBQUUsS0FBSztTQUNwQixDQUFDLENBQUE7S0FDTDtJQUdELElBQUksT0FBTyxnQkFBTSxDQUFDLGFBQWEsS0FBSyxVQUFVLEVBQUU7UUFDNUMsZ0JBQU0sQ0FBQyxhQUFhLENBQUMsR0FBRyxFQUFFLEdBQUcsQ0FBQyxDQUFDO0tBQ2xDO0lBRUQsT0FBTyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztBQUN2QixDQUFDLEVBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY29uZmlnIGZyb20gJy4uL3N0b3JlL2NvbmZpZydcclxuXHJcbmV4cG9ydCBkZWZhdWx0IChvYmo6IFRPRE8sIHJlczogVE9ETykgPT4ge1xyXG4gICAgaWYgKHR5cGVvZiBvYmouZmFpbCA9PT0gXCJmdW5jdGlvblwiKSB7XHJcbiAgICAgICAgb2JqLmZhaWwocmVzKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICAgbGV0IHRpdGxlID0gXCJcIjtcclxuICAgICAgICBpZiAodHlwZW9mIGNvbmZpZy5lcnJvclRpdGxlID09PSBcImZ1bmN0aW9uXCIpIHtcclxuICAgICAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgICAgIHRpdGxlID0gY29uZmlnLmVycm9yVGl0bGUocmVzLmRhdGEgfHwgcmVzLmVyck1zZylcclxuICAgICAgICAgICAgfSBjYXRjaCAoZSkge1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSBlbHNlIGlmICh0eXBlb2YgY29uZmlnLmVycm9yVGl0bGUgPT09IFwic3RyaW5nXCIpIHtcclxuICAgICAgICAgICAgdGl0bGUgPSBjb25maWcuZXJyb3JUaXRsZTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGxldCBjb250ZW50ID0gXCJcIjtcclxuICAgICAgICBpZiAodHlwZW9mIGNvbmZpZy5lcnJvckNvbnRlbnQgPT09IFwiZnVuY3Rpb25cIikge1xyXG4gICAgICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICAgICAgY29udGVudCA9IGNvbmZpZy5lcnJvckNvbnRlbnQocmVzLmRhdGEgfHwgcmVzLmVyck1zZylcclxuICAgICAgICAgICAgfSBjYXRjaCAoZSkge1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSBlbHNlIGlmICh0eXBlb2YgY29uZmlnLmVycm9yQ29udGVudCA9PT0gXCJzdHJpbmdcIikge1xyXG4gICAgICAgICAgICBjb250ZW50ID0gY29uZmlnLmVycm9yQ29udGVudDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHd4LnNob3dNb2RhbCh7XHJcbiAgICAgICAgICAgIHRpdGxlOiB0aXRsZSxcclxuICAgICAgICAgICAgY29udGVudDogY29udGVudCB8fCBcIue9kee7nOaIluacjeWKoeW8guW4uO+8jOivt+eojeWQjumHjeivlVwiLFxyXG4gICAgICAgICAgICBzaG93Q2FuY2VsOiBmYWxzZVxyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcblxyXG4gICAgLy8g5aaC5p6c5pyJ6YWN572u57uf5LiA6ZSZ6K+v5Zue6LCD5Ye95pWw77yM5YiZ5omn6KGM5a6DXHJcbiAgICBpZiAodHlwZW9mIGNvbmZpZy5lcnJvckNhbGxiYWNrID09PSBcImZ1bmN0aW9uXCIpIHtcclxuICAgICAgICBjb25maWcuZXJyb3JDYWxsYmFjayhvYmosIHJlcyk7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc29sZS5lcnJvcihyZXMpO1xyXG59XHJcbiJdfQ==\n\n/***/ }),\n\n/***/ \"./src/module/mockManager.ts\":\n/*!***********************************!*\\\n  !*** ./src/module/mockManager.ts ***!\n  \\***********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar config_1 = __webpack_require__(/*! ../store/config */ \"./src/store/config.ts\");\r\nvar responseHandler_1 = __webpack_require__(/*! ./responseHandler */ \"./src/module/responseHandler.ts\");\r\nfunction get(obj, method) {\r\n    if (!config_1.default.mockJson[obj.url] && !config_1.default.mockJson[obj.originUrl]) {\r\n        console.error('mock 没有对应接口的数据');\r\n        return false;\r\n    }\r\n    var data = config_1.default.mockJson[obj.url] || config_1.default.mockJson[obj.originUrl];\r\n    data = JSON.parse(JSON.stringify(data));\r\n    var res = {\r\n        data: data,\r\n        statusCode: 200\r\n    };\r\n    responseHandler_1.default(res, obj, method);\r\n}\r\nexports.default = {\r\n    get: get\r\n};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9ja01hbmFnZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvbW9kdWxlL21vY2tNYW5hZ2VyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsMENBQW9DO0FBQ3BDLHFEQUErQztBQUUvQyxTQUFTLEdBQUcsQ0FBQyxHQUFTLEVBQUUsTUFBZ0M7SUFFcEQsSUFBRyxDQUFDLGdCQUFNLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLGdCQUFNLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxTQUFTLENBQUMsRUFBRTtRQUU3RCxPQUFPLENBQUMsS0FBSyxDQUFDLGdCQUFnQixDQUFDLENBQUM7UUFDaEMsT0FBTyxLQUFLLENBQUM7S0FDaEI7SUFFRCxJQUFJLElBQUksR0FBRyxnQkFBTSxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLElBQUksZ0JBQU0sQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBRXRFLElBQUksR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztJQUN4QyxJQUFJLEdBQUcsR0FBRztRQUNOLElBQUksRUFBRSxJQUFJO1FBQ1YsVUFBVSxFQUFFLEdBQUc7S0FDbEIsQ0FBQztJQUVGLHlCQUFlLENBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRSxNQUFNLENBQUMsQ0FBQTtBQUNyQyxDQUFDO0FBRUQsa0JBQWU7SUFDWCxHQUFHLEtBQUE7Q0FDTixDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNvbmZpZyBmcm9tICcuLi9zdG9yZS9jb25maWcnXHJcbmltcG9ydCByZXNwb25zZUhhbmRsZXIgZnJvbSAnLi9yZXNwb25zZUhhbmRsZXInXHJcblxyXG5mdW5jdGlvbiBnZXQob2JqOiBUT0RPLCBtZXRob2Q6IFwicmVxdWVzdFwiIHwgXCJ1cGxvYWRGaWxlXCIpOiBhbnkge1xyXG5cclxuICAgIGlmKCFjb25maWcubW9ja0pzb25bb2JqLnVybF0gJiYgIWNvbmZpZy5tb2NrSnNvbltvYmoub3JpZ2luVXJsXSkge1xyXG4gICAgICAgIC8vIG1vY2sg5rKh5pyJ5a+55bqU5o6l5Y+j55qE5pWw5o2uXHJcbiAgICAgICAgY29uc29sZS5lcnJvcignbW9jayDmsqHmnInlr7nlupTmjqXlj6PnmoTmlbDmja4nKTtcclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9XHJcblxyXG4gICAgbGV0IGRhdGEgPSBjb25maWcubW9ja0pzb25bb2JqLnVybF0gfHwgY29uZmlnLm1vY2tKc29uW29iai5vcmlnaW5VcmxdO1xyXG4gICAgLy8gZGVlcCBjb3B5XHJcbiAgICBkYXRhID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShkYXRhKSk7XHJcbiAgICBsZXQgcmVzID0ge1xyXG4gICAgICAgIGRhdGE6IGRhdGEsXHJcbiAgICAgICAgc3RhdHVzQ29kZTogMjAwXHJcbiAgICB9O1xyXG5cclxuICAgIHJlc3BvbnNlSGFuZGxlcihyZXMsIG9iaiwgbWV0aG9kKVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCB7XHJcbiAgICBnZXRcclxufVxyXG4iXX0=\n\n/***/ }),\n\n/***/ \"./src/module/requestHandler.ts\":\n/*!**************************************!*\\\n  !*** ./src/module/requestHandler.ts ***!\n  \\**************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar loading_1 = __webpack_require__(/*! ../util/loading */ \"./src/util/loading.ts\");\r\nvar config_1 = __webpack_require__(/*! ../store/config */ \"./src/store/config.ts\");\r\nvar status_1 = __webpack_require__(/*! ../store/status */ \"./src/store/status.ts\");\r\nvar mockManager_1 = __webpack_require__(/*! ./mockManager */ \"./src/module/mockManager.ts\");\r\nvar cacheManager_1 = __webpack_require__(/*! ./cacheManager */ \"./src/module/cacheManager.ts\");\r\nvar sessionManager_1 = __webpack_require__(/*! ./sessionManager */ \"./src/module/sessionManager.ts\");\r\nvar errorHandler_1 = __webpack_require__(/*! ./errorHandler */ \"./src/module/errorHandler.ts\");\r\nvar responseHandler_1 = __webpack_require__(/*! ./responseHandler */ \"./src/module/responseHandler.ts\");\r\nvar durationReporter_1 = __webpack_require__(/*! ./durationReporter */ \"./src/module/durationReporter.ts\");\r\nfunction format(url) {\r\n    if (url.startsWith('http')) {\r\n        return url;\r\n    }\r\n    else {\r\n        var urlPerfix = config_1.default.urlPerfix;\r\n        if (typeof config_1.default.urlPerfix === \"function\") {\r\n            urlPerfix = config_1.default.urlPerfix();\r\n        }\r\n        return urlPerfix + url;\r\n    }\r\n}\r\nfunction preDo(obj) {\r\n    var _this = this;\r\n    if (typeof obj.beforeSend === \"function\") {\r\n        obj.beforeSend();\r\n    }\r\n    if (typeof obj.reLoginLimit === \"undefined\") {\r\n        obj.reLoginLimit = 0;\r\n    }\r\n    else {\r\n        obj.reLoginLimit++;\r\n    }\r\n    if (typeof obj.count === \"undefined\") {\r\n        obj.count = 0;\r\n    }\r\n    if (obj.showLoading) {\r\n        loading_1.default.show(obj.showLoading);\r\n        obj.complete = (function (fn) {\r\n            var args = [];\r\n            for (var _i = 1; _i < arguments.length; _i++) {\r\n                args[_i - 1] = arguments[_i];\r\n            }\r\n            return function () {\r\n                loading_1.default.hide();\r\n                typeof fn === \"function\" && fn.apply.apply(fn, [_this].concat(args));\r\n            };\r\n        })(obj.complete);\r\n    }\r\n    obj.originUrl = obj.url;\r\n    obj.url = format(obj.url);\r\n    return obj;\r\n}\r\nfunction initialize(obj, container) {\r\n    if (!obj[container]) {\r\n        obj[container] = {};\r\n    }\r\n    if (obj.originUrl !== config_1.default.codeToSession.url && status_1.default.session) {\r\n        obj[container][config_1.default.sessionName] = status_1.default.session;\r\n    }\r\n    var gd = {};\r\n    if (typeof config_1.default.globalData === \"function\") {\r\n        gd = config_1.default.globalData();\r\n    }\r\n    else if (typeof config_1.default.globalData === \"object\") {\r\n        gd = config_1.default.globalData;\r\n    }\r\n    obj[container] = Object.assign({}, gd, obj[container]);\r\n    obj.method = obj.method || 'GET';\r\n    obj.dataType = obj.dataType || 'json';\r\n    if (obj.method !== \"GET\") {\r\n        if (status_1.default.session) {\r\n            if (obj.url.indexOf('?') >= 0) {\r\n                obj.url += '&' + config_1.default.sessionName + '=' + encodeURIComponent(status_1.default.session);\r\n            }\r\n            else {\r\n                obj.url += '?' + config_1.default.sessionName + '=' + encodeURIComponent(status_1.default.session);\r\n            }\r\n        }\r\n        for (var i in gd) {\r\n            if (obj.url.indexOf('?') >= 0) {\r\n                obj.url += '&' + i + '=' + gd[i];\r\n            }\r\n            else {\r\n                obj.url += '?' + i + '=' + gd[i];\r\n            }\r\n        }\r\n    }\r\n    durationReporter_1.default.start(obj);\r\n    return obj;\r\n}\r\nfunction doRequest(obj) {\r\n    obj = initialize(obj, 'data');\r\n    obj.count++;\r\n    wx.request({\r\n        url: obj.url,\r\n        data: obj.data,\r\n        method: obj.method,\r\n        header: obj.header || {},\r\n        dataType: obj.dataType || 'json',\r\n        success: function (res) {\r\n            responseHandler_1.default(res, obj, 'request');\r\n        },\r\n        fail: function (res) {\r\n            errorHandler_1.default(obj, res);\r\n            console.error(res);\r\n        },\r\n        complete: function () {\r\n            obj.count--;\r\n            typeof obj.complete === \"function\" && obj.count === 0 && obj.complete();\r\n        }\r\n    });\r\n}\r\nfunction doUploadFile(obj) {\r\n    obj.count++;\r\n    wx.uploadFile({\r\n        url: obj.url,\r\n        filePath: obj.filePath || '',\r\n        name: obj.name || '',\r\n        formData: obj.formData,\r\n        success: function (res) {\r\n            responseHandler_1.default(res, obj, 'uploadFile');\r\n        },\r\n        fail: function (res) {\r\n            errorHandler_1.default(obj, res);\r\n            console.error(res);\r\n        },\r\n        complete: function () {\r\n            obj.count--;\r\n            typeof obj.complete === \"function\" && obj.count === 0 && obj.complete();\r\n        }\r\n    });\r\n}\r\nfunction request(obj) {\r\n    obj = preDo(obj);\r\n    if (config_1.default.mockJson) {\r\n        mockManager_1.default.get(obj, 'request');\r\n        return false;\r\n    }\r\n    if (obj.cache) {\r\n        cacheManager_1.default.get(obj);\r\n    }\r\n    sessionManager_1.default(function () {\r\n        doRequest(obj);\r\n    }, obj);\r\n}\r\nfunction uploadFile(obj) {\r\n    obj = preDo(obj);\r\n    if (config_1.default.mockJson) {\r\n        mockManager_1.default.get(obj, 'uploadFile');\r\n        return false;\r\n    }\r\n    if (obj.cache) {\r\n        cacheManager_1.default.get(obj);\r\n    }\r\n    sessionManager_1.default(function () {\r\n        doUploadFile(obj);\r\n    }, obj);\r\n}\r\nexports.default = {\r\n    request: request,\r\n    uploadFile: uploadFile\r\n};\r\n//# sourceMappingURL=data:application/json;base64,\n\n/***/ }),\n\n/***/ \"./src/module/responseHandler.ts\":\n/*!***************************************!*\\\n  !*** ./src/module/responseHandler.ts ***!\n  \\***************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar config_1 = __webpack_require__(/*! ../store/config */ \"./src/store/config.ts\");\r\nvar status_1 = __webpack_require__(/*! ../store/status */ \"./src/store/status.ts\");\r\nvar requestHandler_1 = __webpack_require__(/*! ./requestHandler */ \"./src/module/requestHandler.ts\");\r\nvar errorHandler_1 = __webpack_require__(/*! ./errorHandler */ \"./src/module/errorHandler.ts\");\r\nvar cacheManager_1 = __webpack_require__(/*! ./cacheManager */ \"./src/module/cacheManager.ts\");\r\nvar durationReporter_1 = __webpack_require__(/*! ./durationReporter */ \"./src/module/durationReporter.ts\");\r\nfunction response(res, obj, method) {\r\n    if (res.statusCode === 200) {\r\n        if (typeof res.data === \"string\") {\r\n            try {\r\n                res.data = JSON.parse(res.data);\r\n            }\r\n            catch (e) {\r\n                errorHandler_1.default(obj, res);\r\n                return false;\r\n            }\r\n        }\r\n        durationReporter_1.default.end(obj);\r\n        if (obj.isLogin) {\r\n            var s = \"\";\r\n            try {\r\n                s = config_1.default.codeToSession.success(res.data);\r\n            }\r\n            catch (e) {\r\n            }\r\n            if (s) {\r\n                obj.success(s);\r\n            }\r\n            else {\r\n                errorHandler_1.default(obj, res);\r\n            }\r\n        }\r\n        else if (config_1.default.loginTrigger(res.data) && obj.reLoginLimit < config_1.default.reLoginLimit) {\r\n            status_1.default.session = '';\r\n            status_1.default.sessionIsFresh = true;\r\n            wx.removeStorage({\r\n                key: config_1.default.sessionName,\r\n                complete: function () {\r\n                    requestHandler_1.default[method](obj);\r\n                }\r\n            });\r\n        }\r\n        else if (config_1.default.successTrigger(res.data) && typeof obj.success === \"function\") {\r\n            var realData = null;\r\n            try {\r\n                realData = config_1.default.successData(res.data);\r\n            }\r\n            catch (e) {\r\n                console.error(\"Function successData occur error: \" + e);\r\n            }\r\n            if (!obj.noCacheFlash) {\r\n                obj.success(realData);\r\n            }\r\n            cacheManager_1.default.set(obj, realData);\r\n        }\r\n        else {\r\n            errorHandler_1.default(obj, res);\r\n        }\r\n    }\r\n    else {\r\n        errorHandler_1.default(obj, res);\r\n    }\r\n}\r\nexports.default = response;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVzcG9uc2VIYW5kbGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL21vZHVsZS9yZXNwb25zZUhhbmRsZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwwQ0FBb0M7QUFDcEMsMENBQW9DO0FBQ3BDLG1EQUE2QztBQUM3QywrQ0FBeUM7QUFDekMsK0NBQXlDO0FBQ3pDLHVEQUFpRDtBQUVqRCxTQUFTLFFBQVEsQ0FBQyxHQUF5RSxFQUFFLEdBQVMsRUFBRSxNQUFnQztJQUNwSSxJQUFJLEdBQUcsQ0FBQyxVQUFVLEtBQUssR0FBRyxFQUFFO1FBR3hCLElBQUcsT0FBTyxHQUFHLENBQUMsSUFBSSxLQUFLLFFBQVEsRUFBRTtZQUM3QixJQUFJO2dCQUNBLEdBQUcsQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUM7YUFDbkM7WUFBQyxPQUFPLENBQUMsRUFBRTtnQkFDUixzQkFBWSxDQUFDLEdBQUcsRUFBRSxHQUFHLENBQUMsQ0FBQztnQkFDdkIsT0FBTyxLQUFLLENBQUM7YUFDaEI7U0FDSjtRQUVELDBCQUFnQixDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUUxQixJQUFJLEdBQUcsQ0FBQyxPQUFPLEVBQUU7WUFFYixJQUFJLENBQUMsR0FBRyxFQUFFLENBQUM7WUFDWCxJQUFJO2dCQUNBLENBQUMsR0FBRyxnQkFBTSxDQUFDLGFBQWEsQ0FBQyxPQUFRLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDO2FBQy9DO1lBQUMsT0FBTyxDQUFDLEVBQUU7YUFDWDtZQUNELElBQUksQ0FBQyxFQUFFO2dCQUNILEdBQUcsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUM7YUFDbEI7aUJBQU07Z0JBQ0gsc0JBQVksQ0FBQyxHQUFHLEVBQUUsR0FBRyxDQUFDLENBQUM7YUFDMUI7U0FDSjthQUFNLElBQUksZ0JBQU0sQ0FBQyxZQUFhLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxJQUFJLEdBQUcsQ0FBQyxZQUFZLEdBQUcsZ0JBQU0sQ0FBQyxZQUFhLEVBQUU7WUFFbEYsZ0JBQU0sQ0FBQyxPQUFPLEdBQUcsRUFBRSxDQUFDO1lBQ3BCLGdCQUFNLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQztZQUM3QixFQUFFLENBQUMsYUFBYSxDQUFDO2dCQUNiLEdBQUcsRUFBRSxnQkFBTSxDQUFDLFdBQVk7Z0JBQ3hCLFFBQVEsRUFBRTtvQkFDTix3QkFBYyxDQUFDLE1BQU0sQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFBO2dCQUMvQixDQUFDO2FBQ0osQ0FBQyxDQUFBO1NBQ0w7YUFBTSxJQUFJLGdCQUFNLENBQUMsY0FBZSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsSUFBSSxPQUFPLEdBQUcsQ0FBQyxPQUFPLEtBQUssVUFBVSxFQUFFO1lBRTlFLElBQUksUUFBUSxHQUFHLElBQUksQ0FBQztZQUNwQixJQUFJO2dCQUNBLFFBQVEsR0FBRyxnQkFBTSxDQUFDLFdBQVksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUM7YUFDNUM7WUFBQyxPQUFPLENBQUMsRUFBRTtnQkFDUixPQUFPLENBQUMsS0FBSyxDQUFDLG9DQUFvQyxHQUFHLENBQUMsQ0FBQyxDQUFDO2FBQzNEO1lBQ0QsSUFBRyxDQUFDLEdBQUcsQ0FBQyxZQUFZLEVBQUU7Z0JBRWxCLEdBQUcsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7YUFDekI7WUFFRCxzQkFBWSxDQUFDLEdBQUcsQ0FBQyxHQUFHLEVBQUUsUUFBUSxDQUFDLENBQUM7U0FDbkM7YUFBTTtZQUVILHNCQUFZLENBQUMsR0FBRyxFQUFFLEdBQUcsQ0FBQyxDQUFDO1NBQzFCO0tBQ0o7U0FBTTtRQUNILHNCQUFZLENBQUMsR0FBRyxFQUFFLEdBQUcsQ0FBQyxDQUFDO0tBQzFCO0FBQ0wsQ0FBQztBQUVELGtCQUFlLFFBQVEsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjb25maWcgZnJvbSAnLi4vc3RvcmUvY29uZmlnJ1xyXG5pbXBvcnQgc3RhdHVzIGZyb20gJy4uL3N0b3JlL3N0YXR1cydcclxuaW1wb3J0IHJlcXVlc3RIYW5kbGVyIGZyb20gJy4vcmVxdWVzdEhhbmRsZXInXHJcbmltcG9ydCBlcnJvckhhbmRsZXIgZnJvbSAnLi9lcnJvckhhbmRsZXInXHJcbmltcG9ydCBjYWNoZU1hbmFnZXIgZnJvbSAnLi9jYWNoZU1hbmFnZXInXHJcbmltcG9ydCBkdXJhdGlvblJlcG9ydGVyIGZyb20gJy4vZHVyYXRpb25SZXBvcnRlcidcclxuXHJcbmZ1bmN0aW9uIHJlc3BvbnNlKHJlczogd3guUmVxdWVzdFN1Y2Nlc3NDYWxsYmFja1Jlc3VsdCB8IHd4LlVwbG9hZEZpbGVTdWNjZXNzQ2FsbGJhY2tSZXN1bHQsIG9iajogVE9ETywgbWV0aG9kOiBcInJlcXVlc3RcIiB8IFwidXBsb2FkRmlsZVwiKTogYW55IHtcclxuICAgIGlmIChyZXMuc3RhdHVzQ29kZSA9PT0gMjAwKSB7XHJcblxyXG4gICAgICAgIC8vIOWFvOWuuXVwbG9hZEZpbGXov5Tlm57nmoRyZXMuZGF0YeWPr+iDveaYr+Wtl+espuS4slxyXG4gICAgICAgIGlmKHR5cGVvZiByZXMuZGF0YSA9PT0gXCJzdHJpbmdcIikge1xyXG4gICAgICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICAgICAgcmVzLmRhdGEgPSBKU09OLnBhcnNlKHJlcy5kYXRhKTtcclxuICAgICAgICAgICAgfSBjYXRjaCAoZSkge1xyXG4gICAgICAgICAgICAgICAgZXJyb3JIYW5kbGVyKG9iaiwgcmVzKTtcclxuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgZHVyYXRpb25SZXBvcnRlci5lbmQob2JqKTtcclxuXHJcbiAgICAgICAgaWYgKG9iai5pc0xvZ2luKSB7XHJcbiAgICAgICAgICAgIC8vIOeZu+W9leivt+axglxyXG4gICAgICAgICAgICBsZXQgcyA9IFwiXCI7XHJcbiAgICAgICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgICAgICBzID0gY29uZmlnLmNvZGVUb1Nlc3Npb24uc3VjY2VzcyEocmVzLmRhdGEpO1xyXG4gICAgICAgICAgICB9IGNhdGNoIChlKSB7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKHMpIHtcclxuICAgICAgICAgICAgICAgIG9iai5zdWNjZXNzKHMpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgZXJyb3JIYW5kbGVyKG9iaiwgcmVzKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0gZWxzZSBpZiAoY29uZmlnLmxvZ2luVHJpZ2dlciEocmVzLmRhdGEpICYmIG9iai5yZUxvZ2luTGltaXQgPCBjb25maWcucmVMb2dpbkxpbWl0ISkge1xyXG4gICAgICAgICAgICAvLyDnmbvlvZXmgIHlpLHmlYjvvIzkuJTph43or5XmrKHmlbDkuI3otoXov4fphY3nva5cclxuICAgICAgICAgICAgc3RhdHVzLnNlc3Npb24gPSAnJztcclxuICAgICAgICAgICAgc3RhdHVzLnNlc3Npb25Jc0ZyZXNoID0gdHJ1ZTtcclxuICAgICAgICAgICAgd3gucmVtb3ZlU3RvcmFnZSh7XHJcbiAgICAgICAgICAgICAgICBrZXk6IGNvbmZpZy5zZXNzaW9uTmFtZSEsXHJcbiAgICAgICAgICAgICAgICBjb21wbGV0ZTogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHJlcXVlc3RIYW5kbGVyW21ldGhvZF0ob2JqKVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIH0gZWxzZSBpZiAoY29uZmlnLnN1Y2Nlc3NUcmlnZ2VyIShyZXMuZGF0YSkgJiYgdHlwZW9mIG9iai5zdWNjZXNzID09PSBcImZ1bmN0aW9uXCIpIHtcclxuICAgICAgICAgICAgLy8g5o6l5Y+j6L+U5Zue5oiQ5Yqf56CBXHJcbiAgICAgICAgICAgIGxldCByZWFsRGF0YSA9IG51bGw7XHJcbiAgICAgICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgICAgICByZWFsRGF0YSA9IGNvbmZpZy5zdWNjZXNzRGF0YSEocmVzLmRhdGEpO1xyXG4gICAgICAgICAgICB9IGNhdGNoIChlKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiRnVuY3Rpb24gc3VjY2Vzc0RhdGEgb2NjdXIgZXJyb3I6IFwiICsgZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYoIW9iai5ub0NhY2hlRmxhc2gpIHtcclxuICAgICAgICAgICAgICAgIC8vIOWmguaenOS4uuS6huS/neivgemhtemdouS4jemXqueDge+8jOWImeS4jeWbnuiwg++8jOWPquaYr+e8k+WtmOacgOaWsOaVsOaNru+8jOW+heS4i+asoei/m+WFpeWGjeeUqFxyXG4gICAgICAgICAgICAgICAgb2JqLnN1Y2Nlc3MocmVhbERhdGEpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC8vIOe8k+WtmOWtmOWCqFxyXG4gICAgICAgICAgICBjYWNoZU1hbmFnZXIuc2V0KG9iaiwgcmVhbERhdGEpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIC8vIOaOpeWPo+i/lOWbnuWksei0peeggVxyXG4gICAgICAgICAgICBlcnJvckhhbmRsZXIob2JqLCByZXMpO1xyXG4gICAgICAgIH1cclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICAgZXJyb3JIYW5kbGVyKG9iaiwgcmVzKTtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgcmVzcG9uc2U7XHJcbiJdfQ==\n\n/***/ }),\n\n/***/ \"./src/module/sessionManager.ts\":\n/*!**************************************!*\\\n  !*** ./src/module/sessionManager.ts ***!\n  \\**************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar flow_1 = __webpack_require__(/*! ../util/flow */ \"./src/util/flow.ts\");\r\nvar status_1 = __webpack_require__(/*! ../store/status */ \"./src/store/status.ts\");\r\nvar config_1 = __webpack_require__(/*! ../store/config */ \"./src/store/config.ts\");\r\nvar requestHandler_1 = __webpack_require__(/*! ./requestHandler */ \"./src/module/requestHandler.ts\");\r\nvar errorHandler_1 = __webpack_require__(/*! ./errorHandler */ \"./src/module/errorHandler.ts\");\r\nvar durationReporter_1 = __webpack_require__(/*! ./durationReporter */ \"./src/module/durationReporter.ts\");\r\nfunction checkSession(callback, obj) {\r\n    if (status_1.default.isCheckingSession) {\r\n        flow_1.default.wait('checkSessionFinished', function () {\r\n            checkSession(callback, obj);\r\n        });\r\n    }\r\n    else if (!status_1.default.sessionIsFresh && status_1.default.session) {\r\n        status_1.default.isCheckingSession = true;\r\n        obj.count++;\r\n        durationReporter_1.default.start(obj, 'checkSession');\r\n        wx.checkSession({\r\n            success: function () {\r\n                status_1.default.sessionIsFresh = true;\r\n            },\r\n            fail: function () {\r\n                status_1.default.session = '';\r\n            },\r\n            complete: function () {\r\n                status_1.default.isCheckingSession = false;\r\n                obj.count--;\r\n                durationReporter_1.default.end(obj, 'checkSession');\r\n                doLogin(callback, obj);\r\n                flow_1.default.emit('checkSessionFinished');\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        doLogin(callback, obj);\r\n    }\r\n}\r\nfunction doLogin(callback, obj) {\r\n    if (obj.isLogin) {\r\n        typeof callback === \"function\" && callback();\r\n    }\r\n    else if (status_1.default.session) {\r\n        if (status_1.default.sessionExpireTime && new Date().getTime() > status_1.default.sessionExpire) {\r\n            status_1.default.session = '';\r\n            doLogin(callback, obj);\r\n        }\r\n        else {\r\n            typeof callback === \"function\" && callback();\r\n        }\r\n    }\r\n    else if (status_1.default.logining) {\r\n        flow_1.default.wait('doLoginFinished', function () {\r\n            doLogin(callback, obj);\r\n        });\r\n    }\r\n    else {\r\n        status_1.default.logining = true;\r\n        obj.count++;\r\n        durationReporter_1.default.start(obj, 'login');\r\n        console.log('wx.login');\r\n        wx.login({\r\n            complete: function () {\r\n                obj.count--;\r\n                durationReporter_1.default.end(obj, 'login');\r\n                typeof obj.complete === \"function\" && obj.count === 0 && obj.complete();\r\n            },\r\n            success: function (res) {\r\n                if (res.code) {\r\n                    code2Session(obj, res.code, callback);\r\n                }\r\n                else {\r\n                    errorHandler_1.default(obj, res);\r\n                    console.error(res);\r\n                    status_1.default.logining = false;\r\n                    flow_1.default.emit('doLoginFinished');\r\n                }\r\n            },\r\n            fail: function (res) {\r\n                errorHandler_1.default(obj, res);\r\n                console.error(res);\r\n                status_1.default.logining = false;\r\n                flow_1.default.emit('doLoginFinished');\r\n            }\r\n        });\r\n    }\r\n}\r\nfunction code2Session(obj, code, callback) {\r\n    var data;\r\n    if (typeof config_1.default.codeToSession.data === \"function\") {\r\n        data = config_1.default.codeToSession.data();\r\n    }\r\n    else {\r\n        data = config_1.default.codeToSession.data || {};\r\n    }\r\n    data[config_1.default.codeToSession.codeName] = code;\r\n    obj.count++;\r\n    requestHandler_1.default.request({\r\n        url: config_1.default.codeToSession.url,\r\n        data: data,\r\n        method: config_1.default.codeToSession.method || 'GET',\r\n        isLogin: true,\r\n        report: config_1.default.codeToSession.report || config_1.default.codeToSession.url,\r\n        success: function (s) {\r\n            status_1.default.session = s;\r\n            status_1.default.sessionIsFresh = true;\r\n            if (status_1.default.sessionExpireTime) {\r\n                status_1.default.sessionExpire = new Date().getTime() + status_1.default.sessionExpireTime;\r\n                wx.setStorage({\r\n                    key: config_1.default.sessionExpireKey,\r\n                    data: String(status_1.default.sessionExpire)\r\n                });\r\n            }\r\n            typeof callback === \"function\" && callback();\r\n            wx.setStorage({\r\n                key: config_1.default.sessionName,\r\n                data: status_1.default.session\r\n            });\r\n        },\r\n        complete: function () {\r\n            obj.count--;\r\n            typeof obj.complete === \"function\" && obj.count === 0 && obj.complete();\r\n            status_1.default.logining = false;\r\n            flow_1.default.emit('doLoginFinished');\r\n        },\r\n        fail: config_1.default.codeToSession.fail || null\r\n    });\r\n}\r\nexports.default = checkSession;\r\n//# sourceMappingURL=data:application/json;base64,\n\n/***/ }),\n\n/***/ \"./src/store/config.ts\":\n/*!*****************************!*\\\n  !*** ./src/store/config.ts ***!\n  \\*****************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar defaultConfig = {\r\n    sessionName: \"session\",\r\n    loginTrigger: function () {\r\n        return false;\r\n    },\r\n    codeToSession: {},\r\n    successTrigger: function () {\r\n        return true;\r\n    },\r\n    urlPerfix: \"\",\r\n    successData: function (res) {\r\n        return res;\r\n    },\r\n    doNotCheckSession: false,\r\n    errorTitle: \"操作失败\",\r\n    errorContent: function (res) {\r\n        return res;\r\n    },\r\n    reLoginLimit: 3,\r\n    errorCallback: null,\r\n    reportCGI: false,\r\n    mockJson: false,\r\n    globalData: false,\r\n    sessionExpireKey: \"sessionExpireKey\"\r\n};\r\nexports.default = defaultConfig;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3N0b3JlL2NvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUNBLElBQU0sYUFBYSxHQUFnQjtJQUMvQixXQUFXLEVBQUUsU0FBUztJQUN0QixZQUFZO1FBQ1IsT0FBTyxLQUFLLENBQUE7SUFDaEIsQ0FBQztJQUNELGFBQWEsRUFBRSxFQUFFO0lBQ2pCLGNBQWM7UUFDVixPQUFPLElBQUksQ0FBQTtJQUNmLENBQUM7SUFDRCxTQUFTLEVBQUUsRUFBRTtJQUNiLFdBQVcsWUFBQyxHQUFRO1FBQ2hCLE9BQU8sR0FBRyxDQUFBO0lBQ2QsQ0FBQztJQUNELGlCQUFpQixFQUFFLEtBQUs7SUFDeEIsVUFBVSxFQUFFLE1BQU07SUFDbEIsWUFBWSxZQUFDLEdBQVE7UUFDakIsT0FBTyxHQUFHLENBQUE7SUFDZCxDQUFDO0lBQ0QsWUFBWSxFQUFFLENBQUM7SUFDZixhQUFhLEVBQUUsSUFBSTtJQUNuQixTQUFTLEVBQUUsS0FBSztJQUNoQixRQUFRLEVBQUUsS0FBSztJQUNmLFVBQVUsRUFBRSxLQUFLO0lBRWpCLGdCQUFnQixFQUFFLGtCQUFrQjtDQUN2QyxDQUFBO0FBRUQsa0JBQWUsYUFBYSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSUluaXRPcHRpb24gfSBmcm9tICcuLi9hcGkvaW5pdCc7XHJcbmNvbnN0IGRlZmF1bHRDb25maWc6IElJbml0T3B0aW9uID0ge1xyXG4gICAgc2Vzc2lvbk5hbWU6IFwic2Vzc2lvblwiLFxyXG4gICAgbG9naW5UcmlnZ2VyKCkge1xyXG4gICAgICAgIHJldHVybiBmYWxzZVxyXG4gICAgfSxcclxuICAgIGNvZGVUb1Nlc3Npb246IHt9LFxyXG4gICAgc3VjY2Vzc1RyaWdnZXIoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRydWVcclxuICAgIH0sXHJcbiAgICB1cmxQZXJmaXg6IFwiXCIsXHJcbiAgICBzdWNjZXNzRGF0YShyZXM6IGFueSkge1xyXG4gICAgICAgIHJldHVybiByZXNcclxuICAgIH0sXHJcbiAgICBkb05vdENoZWNrU2Vzc2lvbjogZmFsc2UsXHJcbiAgICBlcnJvclRpdGxlOiBcIuaTjeS9nOWksei0pVwiLFxyXG4gICAgZXJyb3JDb250ZW50KHJlczogYW55KSB7XHJcbiAgICAgICAgcmV0dXJuIHJlc1xyXG4gICAgfSxcclxuICAgIHJlTG9naW5MaW1pdDogMyxcclxuICAgIGVycm9yQ2FsbGJhY2s6IG51bGwsXHJcbiAgICByZXBvcnRDR0k6IGZhbHNlLFxyXG4gICAgbW9ja0pzb246IGZhbHNlLFxyXG4gICAgZ2xvYmFsRGF0YTogZmFsc2UsXHJcbiAgICAvLyBzZXNzaW9u5Zyo5pys5Zyw57yT5a2Y55qEa2V5XHJcbiAgICBzZXNzaW9uRXhwaXJlS2V5OiBcInNlc3Npb25FeHBpcmVLZXlcIlxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBkZWZhdWx0Q29uZmlnOyJdfQ==\n\n/***/ }),\n\n/***/ \"./src/store/status.ts\":\n/*!*****************************!*\\\n  !*** ./src/store/status.ts ***!\n  \\*****************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.default = {\r\n    session: '',\r\n    sessionExpireTime: null,\r\n    sessionExpire: Infinity,\r\n    sessionIsFresh: false,\r\n    logining: false,\r\n    isCheckingSession: false\r\n};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhdHVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3N0b3JlL3N0YXR1cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGtCQUFlO0lBQ1gsT0FBTyxFQUFFLEVBQVk7SUFFckIsaUJBQWlCLEVBQUUsSUFBSTtJQUV2QixhQUFhLEVBQUUsUUFBUTtJQUN2QixjQUFjLEVBQUUsS0FBZ0I7SUFFaEMsUUFBUSxFQUFFLEtBQWdCO0lBRTFCLGlCQUFpQixFQUFFLEtBQWdCO0NBQy9CLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XHJcbiAgICBzZXNzaW9uOiAnJyBhcyBzdHJpbmcsXHJcbiAgICAvLyBzZXNzaW9u5Zyo5pys5Zyw57yT5a2Y55qE5pyJ5pWI5pe26Ze0XHJcbiAgICBzZXNzaW9uRXhwaXJlVGltZTogbnVsbCxcclxuICAgIC8vIHNlc3Npb27ov4fmnJ/nmoTml7bpl7TngrlcclxuICAgIHNlc3Npb25FeHBpcmU6IEluZmluaXR5LFxyXG4gICAgc2Vzc2lvbklzRnJlc2g6IGZhbHNlIGFzIGJvb2xlYW4sXHJcbiAgICAvLyDmraPlnKjnmbvlvZXkuK3vvIzlhbbku5bor7fmsYLova7or6LnqI3lkI7vvIzpgb/lhY3ph43lpI3osIPnlKjnmbvlvZXmjqXlj6NcclxuICAgIGxvZ2luaW5nOiBmYWxzZSBhcyBib29sZWFuLFxyXG4gICAgLy8g5q2j5Zyo5p+l6K+ic2Vzc2lvbuacieaViOacn+S4re+8jOmBv+WFjemHjeWkjeiwg+eUqOaOpeWPo1xyXG4gICAgaXNDaGVja2luZ1Nlc3Npb246IGZhbHNlIGFzIGJvb2xlYW5cclxufSBhcyBhbnlcclxuIl19\n\n/***/ }),\n\n/***/ \"./src/util/flow.ts\":\n/*!**************************!*\\\n  !*** ./src/util/flow.ts ***!\n  \\**************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar store = {};\r\nfunction emit(key) {\r\n    var flow = getFlow(key);\r\n    var currentLength = flow.waitingList.length;\r\n    for (var i = 0; i < currentLength; i++) {\r\n        var callback = flow.waitingList.shift();\r\n        typeof callback == \"function\" && callback();\r\n    }\r\n}\r\nfunction wait(key, callback) {\r\n    var flow = getFlow(key);\r\n    flow.waitingList.push(callback);\r\n}\r\nfunction getFlow(key) {\r\n    if (!store[key]) {\r\n        store[key] = {\r\n            waitingList: []\r\n        };\r\n    }\r\n    return store[key];\r\n}\r\nexports.default = {\r\n    wait: wait,\r\n    emit: emit\r\n};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmxvdy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsL2Zsb3cudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFJLEtBQUssR0FBUyxFQUFFLENBQUM7QUFFckIsU0FBUyxJQUFJLENBQUMsR0FBUztJQUNuQixJQUFJLElBQUksR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDeEIsSUFBSSxhQUFhLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUM7SUFDNUMsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLGFBQWEsRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUNwQyxJQUFJLFFBQVEsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLEtBQUssRUFBRSxDQUFDO1FBQ3hDLE9BQU8sUUFBUSxJQUFJLFVBQVUsSUFBSSxRQUFRLEVBQUUsQ0FBQztLQUMvQztBQUNMLENBQUM7QUFFRCxTQUFTLElBQUksQ0FBQyxHQUFTLEVBQUUsUUFBa0I7SUFDdkMsSUFBSSxJQUFJLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ3hCLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFBO0FBQ25DLENBQUM7QUFFRCxTQUFTLE9BQU8sQ0FBQyxHQUFTO0lBQ3RCLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLEVBQUU7UUFDYixLQUFLLENBQUMsR0FBRyxDQUFDLEdBQUc7WUFDVCxXQUFXLEVBQUUsRUFBRTtTQUNsQixDQUFBO0tBQ0o7SUFFRCxPQUFPLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztBQUN0QixDQUFDO0FBRUQsa0JBQWU7SUFDWCxJQUFJLE1BQUE7SUFDSixJQUFJLE1BQUE7Q0FDUCxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsibGV0IHN0b3JlOiBUT0RPID0ge307XHJcblxyXG5mdW5jdGlvbiBlbWl0KGtleTogVE9ETykge1xyXG4gICAgbGV0IGZsb3cgPSBnZXRGbG93KGtleSk7XHJcbiAgICBsZXQgY3VycmVudExlbmd0aCA9IGZsb3cud2FpdGluZ0xpc3QubGVuZ3RoO1xyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjdXJyZW50TGVuZ3RoOyBpKyspIHtcclxuICAgICAgICBsZXQgY2FsbGJhY2sgPSBmbG93LndhaXRpbmdMaXN0LnNoaWZ0KCk7XHJcbiAgICAgICAgdHlwZW9mIGNhbGxiYWNrID09IFwiZnVuY3Rpb25cIiAmJiBjYWxsYmFjaygpO1xyXG4gICAgfVxyXG59XHJcblxyXG5mdW5jdGlvbiB3YWl0KGtleTogVE9ETywgY2FsbGJhY2s6IEZ1bmN0aW9uKSB7XHJcbiAgICB2YXIgZmxvdyA9IGdldEZsb3coa2V5KTtcclxuICAgIGZsb3cud2FpdGluZ0xpc3QucHVzaChjYWxsYmFjaylcclxufVxyXG5cclxuZnVuY3Rpb24gZ2V0RmxvdyhrZXk6IFRPRE8pIHtcclxuICAgIGlmICghc3RvcmVba2V5XSkge1xyXG4gICAgICAgIHN0b3JlW2tleV0gPSB7XHJcbiAgICAgICAgICAgIHdhaXRpbmdMaXN0OiBbXVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gc3RvcmVba2V5XTtcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG4gICAgd2FpdCxcclxuICAgIGVtaXRcclxufVxyXG4iXX0=\n\n/***/ }),\n\n/***/ \"./src/util/loading.ts\":\n/*!*****************************!*\\\n  !*** ./src/util/loading.ts ***!\n  \\*****************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction show(txt) {\r\n    wx.showToast({\r\n        title: typeof txt === 'boolean' ? '加载中' : txt,\r\n        icon: 'loading',\r\n        mask: true,\r\n        duration: 60000\r\n    });\r\n}\r\nfunction hide() {\r\n    wx.hideToast({});\r\n}\r\nexports.default = {\r\n    show: show,\r\n    hide: hide\r\n};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9hZGluZy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsL2xvYWRpbmcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxTQUFTLElBQUksQ0FBQyxHQUFxQjtJQUMvQixFQUFFLENBQUMsU0FBUyxDQUFDO1FBQ1QsS0FBSyxFQUFFLE9BQU8sR0FBRyxLQUFLLFNBQVMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxHQUFHO1FBQzdDLElBQUksRUFBRSxTQUFTO1FBQ2YsSUFBSSxFQUFFLElBQUk7UUFDVixRQUFRLEVBQUUsS0FBSztLQUNsQixDQUFDLENBQUE7QUFDTixDQUFDO0FBRUQsU0FBUyxJQUFJO0lBQ1QsRUFBRSxDQUFDLFNBQVMsQ0FBQyxFQUFFLENBQUMsQ0FBQztBQUNyQixDQUFDO0FBRUQsa0JBQWU7SUFDWCxJQUFJLE1BQUE7SUFDSixJQUFJLE1BQUE7Q0FDUCxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gc2hvdyh0eHQ6IGJvb2xlYW4gfCBzdHJpbmcpIHtcclxuICAgIHd4LnNob3dUb2FzdCh7XHJcbiAgICAgICAgdGl0bGU6IHR5cGVvZiB0eHQgPT09ICdib29sZWFuJyA/ICfliqDovb3kuK0nIDogdHh0LFxyXG4gICAgICAgIGljb246ICdsb2FkaW5nJyxcclxuICAgICAgICBtYXNrOiB0cnVlLFxyXG4gICAgICAgIGR1cmF0aW9uOiA2MDAwMFxyXG4gICAgfSlcclxufVxyXG5cclxuZnVuY3Rpb24gaGlkZSgpIHtcclxuICAgIHd4LmhpZGVUb2FzdCh7fSk7XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuICAgIHNob3csXHJcbiAgICBoaWRlXHJcbn1cclxuIl19\n\n/***/ })\n\n/******/ });\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,"]}